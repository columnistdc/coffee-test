module.exports.description = 'Create products collection with sample products linked to categories';

module.exports = async function (db) {
  await db.createCollection('products');

  await db.collection('products').createIndex({ name: 1 }, { name: 'products_name_idx' });

  await db.collection('products').createIndex({ categoryId: 1 }, { name: 'products_category_idx' });

  const categories = await db.collection('categories').find({}).toArray();

  const products = [
    {
      name: 'Молоко 3.2%',
      description: 'Свежее пастеризованное молоко',
      price: 89.9,
      categoryId: categories.find(c => c.name === 'Молочные продукты')._id,
      stock: 100,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Хлеб белый',
      description: 'Свежий белый хлеб',
      price: 45.0,
      categoryId: categories.find(c => c.name === 'Хлебобулочные изделия')._id,
      stock: 50,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Яблоки Голден',
      description: 'Сладкие яблоки',
      price: 129.9,
      categoryId: categories.find(c => c.name === 'Овощи и фрукты')._id,
      stock: 200,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Куриное филе',
      description: 'Свежее куриное филе',
      price: 299.9,
      categoryId: categories.find(c => c.name === 'Мясо и птица')._id,
      stock: 30,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Лосось свежий',
      description: 'Свежий лосось',
      price: 899.9,
      categoryId: categories.find(c => c.name === 'Рыба и морепродукты')._id,
      stock: 20,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Шоколад молочный',
      description: 'Молочный шоколад',
      price: 89.9,
      categoryId: categories.find(c => c.name === 'Кондитерские изделия')._id,
      stock: 150,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Рис длиннозерный',
      description: 'Рис для приготовления',
      price: 159.9,
      categoryId: categories.find(c => c.name === 'Бакалея')._id,
      stock: 80,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Апельсиновый сок',
      description: 'Свежевыжатый апельсиновый сок',
      price: 199.9,
      categoryId: categories.find(c => c.name === 'Напитки')._id,
      stock: 60,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Вино красное',
      description: 'Красное сухое вино',
      price: 799.9,
      categoryId: categories.find(c => c.name === 'Алкогольные напитки')._id,
      stock: 40,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Пицца замороженная',
      description: 'Замороженная пицца',
      price: 299.9,
      categoryId: categories.find(c => c.name === 'Замороженные продукты')._id,
      stock: 45,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Соевый соус',
      description: 'Классический соевый соус',
      price: 149.9,
      categoryId: categories.find(c => c.name === 'Соусы и специи')._id,
      stock: 70,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Грецкие орехи',
      description: 'Очищенные грецкие орехи',
      price: 399.9,
      categoryId: categories.find(c => c.name === 'Орехи и сухофрукты')._id,
      stock: 40,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Детская каша',
      description: 'Молочная каша для детей',
      price: 129.9,
      categoryId: categories.find(c => c.name === 'Детское питание')._id,
      stock: 60,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Хлебцы диетические',
      description: 'Диетические хлебцы',
      price: 89.9,
      categoryId: categories.find(c => c.name === 'Диетические продукты')._id,
      stock: 100,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Пельмени',
      description: 'Замороженные пельмени',
      price: 249.9,
      categoryId: categories.find(c => c.name === 'Фастфуд и полуфабрикаты')._id,
      stock: 50,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Творог 5%',
      description: 'Творог средней жирности',
      price: 129.9,
      categoryId: categories.find(c => c.name === 'Молочные продукты')._id,
      stock: 80,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Багет французский',
      description: 'Свежий французский багет',
      price: 79.9,
      categoryId: categories.find(c => c.name === 'Хлебобулочные изделия')._id,
      stock: 40,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Бананы',
      description: 'Спелые бананы',
      price: 89.9,
      categoryId: categories.find(c => c.name === 'Овощи и фрукты')._id,
      stock: 150,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Свинина вырезка',
      description: 'Свежая свиная вырезка',
      price: 499.9,
      categoryId: categories.find(c => c.name === 'Мясо и птица')._id,
      stock: 25,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Креветки',
      description: 'Замороженные креветки',
      price: 699.9,
      categoryId: categories.find(c => c.name === 'Рыба и морепродукты')._id,
      stock: 30,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Пирожное',
      description: 'Свежее пирожное',
      price: 129.9,
      categoryId: categories.find(c => c.name === 'Кондитерские изделия')._id,
      stock: 40,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Гречка',
      description: 'Гречневая крупа',
      price: 139.9,
      categoryId: categories.find(c => c.name === 'Бакалея')._id,
      stock: 90,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Кофе растворимый',
      description: 'Растворимый кофе',
      price: 299.9,
      categoryId: categories.find(c => c.name === 'Напитки')._id,
      stock: 70,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Пиво',
      description: 'Светлое пиво',
      price: 129.9,
      categoryId: categories.find(c => c.name === 'Алкогольные напитки')._id,
      stock: 100,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Брокколи замороженная',
      description: 'Замороженная брокколи',
      price: 199.9,
      categoryId: categories.find(c => c.name === 'Замороженные продукты')._id,
      stock: 60,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Кетчуп',
      description: 'Томатный кетчуп',
      price: 89.9,
      categoryId: categories.find(c => c.name === 'Соусы и специи')._id,
      stock: 80,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Изюм',
      description: 'Сушеный изюм',
      price: 199.9,
      categoryId: categories.find(c => c.name === 'Орехи и сухофрукты')._id,
      stock: 50,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Детское пюре',
      description: 'Фруктовое пюре для детей',
      price: 89.9,
      categoryId: categories.find(c => c.name === 'Детское питание')._id,
      stock: 70,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Мюсли диетические',
      description: 'Диетические мюсли',
      price: 159.9,
      categoryId: categories.find(c => c.name === 'Диетические продукты')._id,
      stock: 60,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Блинчики замороженные',
      description: 'Замороженные блинчики',
      price: 199.9,
      categoryId: categories.find(c => c.name === 'Фастфуд и полуфабрикаты')._id,
      stock: 45,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Сыр твердый',
      description: 'Твердый сыр',
      price: 399.9,
      categoryId: categories.find(c => c.name === 'Молочные продукты')._id,
      stock: 40,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Круассан',
      description: 'Свежий круассан',
      price: 69.9,
      categoryId: categories.find(c => c.name === 'Хлебобулочные изделия')._id,
      stock: 30,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Помидоры',
      description: 'Свежие помидоры',
      price: 159.9,
      categoryId: categories.find(c => c.name === 'Овощи и фрукты')._id,
      stock: 100,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Говядина',
      description: 'Свежая говядина',
      price: 699.9,
      categoryId: categories.find(c => c.name === 'Мясо и птица')._id,
      stock: 20,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Тунец консервированный',
      description: 'Консервированный тунец',
      price: 199.9,
      categoryId: categories.find(c => c.name === 'Рыба и морепродукты')._id,
      stock: 50,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Торт',
      description: 'Свежий торт',
      price: 599.9,
      categoryId: categories.find(c => c.name === 'Кондитерские изделия')._id,
      stock: 15,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Макароны',
      description: 'Спагетти',
      price: 89.9,
      categoryId: categories.find(c => c.name === 'Бакалея')._id,
      stock: 120,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Чай зеленый',
      description: 'Зеленый чай',
      price: 149.9,
      categoryId: categories.find(c => c.name === 'Напитки')._id,
      stock: 90,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Водка',
      description: 'Классическая водка',
      price: 999.9,
      categoryId: categories.find(c => c.name === 'Алкогольные напитки')._id,
      stock: 30,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Кукуруза замороженная',
      description: 'Замороженная кукуруза',
      price: 129.9,
      categoryId: categories.find(c => c.name === 'Замороженные продукты')._id,
      stock: 70,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Майонез',
      description: 'Классический майонез',
      price: 79.9,
      categoryId: categories.find(c => c.name === 'Соусы и специи')._id,
      stock: 100,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Кешью',
      description: 'Очищенные орехи кешью',
      price: 499.9,
      categoryId: categories.find(c => c.name === 'Орехи и сухофрукты')._id,
      stock: 40,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Детская смесь',
      description: 'Молочная смесь для детей',
      price: 899.9,
      categoryId: categories.find(c => c.name === 'Детское питание')._id,
      stock: 30,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Хлебцы цельнозерновые',
      description: 'Цельнозерновые хлебцы',
      price: 129.9,
      categoryId: categories.find(c => c.name === 'Диетические продукты')._id,
      stock: 80,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      name: 'Вареники',
      description: 'Замороженные вареники',
      price: 199.9,
      categoryId: categories.find(c => c.name === 'Фастфуд и полуфабрикаты')._id,
      stock: 60,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
  ];

  await db.collection('products').insertMany(products);
};

module.exports.down = async function (db) {
  await db.collection('products').dropIndex('products_name_idx');
  await db.collection('products').dropIndex('products_category_idx');

  await db.collection('products').drop();
};
